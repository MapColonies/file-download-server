
{{- $releaseName := .Release.Name -}}
{{- $chartName := include "file-download-server.name" . -}}
{{- $cloudProviderFlavor := include "file-download-server.cloudProviderFlavor" . -}}
{{- $cloudProviderDockerRegistryUrl := include "file-download-server.cloudProviderDockerRegistryUrl" . -}}
{{- $cloudProviderImagePullSecretName := include "file-download-server.cloudProviderImagePullSecretName" . -}}
{{- $imageTag := include "file-download-server.tag" . -}}
{{- $tracingUrl := include "file-download-server.tracingUrl" . -}}


{{- if .Values.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    collectord.io/index: {{ quote .Values.splunkIndex }}
  name: {{ $releaseName }}-{{ $chartName }}
  labels:
    app: {{ $chartName }}
    component: {{ $chartName }}
    environment: {{ include "file-download-server.environment" . }}
    release: {{ $releaseName }}
    {{- include "file-download-server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $chartName }}
      release: {{ $releaseName }}
      run: {{ $releaseName }}-{{ $chartName }}
      {{- include "file-download-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ $chartName }}
        release: {{ $releaseName }}
        run: {{ $releaseName }}-{{ $chartName }}
        {{- include "file-download-server.selectorLabels" . | nindent 8 }}
    spec:
    {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
    {{- end }}
      volumes:
      - name: internal-storage
        persistentVolumeClaim:
          claimName: {{ .Values.storage.internalPvc.name }} 
      - name: nginx-downloads-config
        configMap:
          name: {{ template "file-download-server.fullname" . }}-configmap
          items:
          - key: "NGINX_DOWNLOADS_CONFIG"
            path: "downloads.conf"
      containers:
        - name: {{ $releaseName }}-{{ $chartName }}-deployment
          {{- with .Values.image }}
          image: {{ $cloudProviderDockerRegistryUrl }}{{ .repository }}:{{ $imageTag }}
          env:
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ $tracingUrl }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.env.targetPort }}
              protocol: {{ .Values.env.protocol }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            httpGet:
              path: /nginx_status
              port: 8081
          volumeMounts:
            - name: internal-storage 
              mountPath: /usr/share/nginx/html/downloads 
              subPath: gpkgs
            - mountPath: "/etc/nginx/conf.d/downloads.conf"
              name: nginx-downloads-config
              subPath: downloads.conf
              readOnly: true
          {{- if .Values.resources.enabled }}
          resources:
            {{- toYaml .Values.resources.value | nindent 12 }}
          {{- end }}
{{- end -}}

